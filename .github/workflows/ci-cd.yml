name: CI/CD
on:
  schedule:
    - cron: '05 11 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}
jobs:
  container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write      
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{env.REGISTRY}}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Containerfile
      - name: Sign the published Docker image
        if: ${{github.event_name != 'pull_request'}}
        env:
          TAGS: ${{steps.meta.outputs.tags}}
          DIGEST: ${{steps.build-and-push.outputs.digest}}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
  iso:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    container:
      image: quay.io/fedora/fedora:41
      options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get year & month
        id: get-ym
        run: |
          echo "ym=$(/bin/date -u '+%Y%m')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache ISO
        id: cache
        uses: actions/cache@v4
        with:
          path: calcite-9.iso
          key: ${{steps.get-ym.outputs.ym}}-${{hashFiles('ks.cfg')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: dnf install -y lorax util-linux
      - name: Download upstream ISO
        if: steps.cache.outputs.cache-hit != 'true'
        run: curl -Lso upstream.iso https://nyc.mirrors.clouvider.net/rocky/9/isos/x86_64/Rocky-9-latest-x86_64-boot.iso
      - name: Build ISO
        if: steps.cache.outputs.cache-hit != 'true'
        run: mkksiso ks.cfg upstream.iso calcite-9.iso
      - name: Release
        if: ${{github.event_name != 'pull_request'}}
        uses: softprops/action-gh-release@v2
        with:
          name: Continuous
          tag_name: continuous
          body: |
            > [!WARNING]  
            > Installation **WILL FAIL** if there is no network connection set up while installing. If you can't provide one, **DO NOT INSTALL THIS SOFTWARE.**
          files: calcite-9.iso
